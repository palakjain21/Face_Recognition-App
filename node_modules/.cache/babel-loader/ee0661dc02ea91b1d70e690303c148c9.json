{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/palakjain/Face_Recognition-App/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"../src/Components/navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Particles from \"react-particles-js\";\nimport SignIn from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Signup/Signup\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nconst particleOptions = {\n  particles: {\n    number: {\n      vlaue: 150,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    },\n    size: {\n      value: 5,\n      random: true\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: {\n          enable: false\n        }\n      },\n      modes: {\n        push: {\n          particles_nb: 12\n        }\n      }\n    }\n  }\n};\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    // entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          // entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onSubmit = () => {\n      // console.log(\"click\");\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://facerecognition1234.herokuapp.com/ImageUrl\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        // this.setState({ isSignedIn: false });\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      imageUrl,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onSubmit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : route === \"signin\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/palakjain/Face_Recognition-App/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Particles","SignIn","Register","FaceRecognition","particleOptions","particles","number","vlaue","density","enable","value_area","size","value","random","interactivity","detect_on","events","onhover","modes","push","particles_nb","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","joined","App","constructor","loadUser","data","setState","onInputChange","event","target","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"../src/Components/navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Particles from \"react-particles-js\";\nimport SignIn from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Signup/Signup\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\n\nconst particleOptions = {\n  particles: {\n    number: {\n      vlaue: 150,\n      density: {\n        enable: true,\n        value_area: 1000,\n      },\n    },\n    size: {\n      value: 5,\n      random: true,\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: {\n          enable: false,\n        },\n      },\n      modes: {\n        push: {\n          particles_nb: 12,\n        },\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    // entries: 0,\n    joined: \"\",\n  },\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        // entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n\n    console.log(box);\n\n    this.setState({ box: box });\n  };\n\n  onSubmit = () => {\n    // console.log(\"click\");\n    this.setState({ imageUrl: this.state.input });\n\n    fetch(\"https://facerecognition1234.herokuapp.com/ImageUrl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n\n      // this.setState({ isSignedIn: false });\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n\n    this.setState({ route: route });\n  };\n  render() {\n    const { isSignedIn, route, imageUrl, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}